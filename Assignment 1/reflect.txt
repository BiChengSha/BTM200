1. The program used both Switch/Case as well as If statements. The S/C statement was used as the largest container where it didn't make sense to do if this, else if, else if, else if. For example the movie selection screen starting on line 111 is made up of If statements nested inside a S/C. The S/C are for list item 1-4, with a default value to reject all invalid results. 
The If statements used inside the S/C statements are more to make smaller decisions and change values of variables and boolean flags for other parts of the program. For example line 122, 126, 131, and 135 mark off the maximum number of time slots available for each different movie. Choosing If statements in place of the S/C would still work but would probably require more lines and/or more typing. Not that big of a difference in terms of actual results in the end.

2. Simply passing through the required user defined selections into a different function allowed me to build up another S/C structure to print out the exact selection the user made. This might not have been the most efficient use of code but nonetheless it kept track of the user's selections as well as compatmentalizing each individual aspect of the code to make the entire program easier to navigate later.

3. Floating point arithmetic may round differently when it comes to fractional cents since it holds more digits and the rounding happens when it comes time to output two decimal places. All relevant decimal places (thousandths place) are retained through all steps and rounding only happens when using the printf formatting option of %.2f to display two decimal places (hundreths). Since the thousandths place is preserved throughout all calculations, the hundreths place is rounded to the correct value. If using integers and converting to cents, the rounding may be different since rounding will happen at each step of the integer arithmetic, and therefore after multiple rounding errors, the final value may be different. 

